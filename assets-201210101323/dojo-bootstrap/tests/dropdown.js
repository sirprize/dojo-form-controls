//>>built
require({packages:[{name:"dojo",location:"../dojo"},{name:"bootstrap",location:"../bootstrap"}]},"doh,dojo/on,dojo/dom-construct,dojo/dom-class,dojo/dom-attr,../Dropdown".split(","),function(b,e,c,d,f){var a=dojo.query;b.register("bootstrap.dropdowns",{"should be defined on NodeList object":function(){b.t(a(document.body).dropdown)},"should return element":function(){b.is(document.body,a(document.body).dropdown()[0])},"should find sibling ul for dropdown menu":{setUp:function(){this.n=c.place('<div class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#"></a><ul class="dropdown-menu"><li><a href="#">Action</a></li></ul></div>',
document.body)},runTest:function(){e.emit(a(".dropdown-toggle",this.n)[0],"click",{bubbles:!0,cancelable:!0});b.t(d.contains(this.n,"open"));e.emit(a(".dropdown-toggle",this.n)[0],"click",{bubbles:!0,cancelable:!0});b.f(d.contains(this.n,"open"))},tearDown:function(){c.destroy(this.n)}},"should find dropdown menu by data-target attribute":{setUp:function(){this.n=c.place('<div class="btn-group"><button class="btn" /><button class="btn dropdown-toggle" data-target="#menu" data-toggle="dropdown">&nbsp;</button><ul class="dropdown-menu" id="menu"><li><a href="#">Action</a></li></ul></div>',
document.body)},runTest:function(){e.emit(a(".dropdown-toggle",this.n)[0],"click",{bubbles:!0,cancelable:!0});b.t(d.contains(this.n,"open"));e.emit(a(".dropdown-toggle",this.n)[0],"click",{bubbles:!0,cancelable:!0});b.f(d.contains(this.n,"open"))},tearDown:function(){c.destroy(this.n)}},"should not open dropdown if target has disabled attribute":{setUp:function(){this.n=c.place('<div class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#"></a><ul class="dropdown-menu"><li><a href="#">Action</a></li></ul></div>',
document.body);f.set(a(".dropdown-toggle",this.n)[0],"disabled","disabled")},runTest:function(){e.emit(a(".dropdown-toggle",this.n)[0],"click",{bubbles:!0,cancelable:!0});b.f(d.contains(this.n,"open"))},tearDown:function(){c.destroy(this.n)}},"should not open dropdown if target has disabled class":{setUp:function(){this.n=c.place('<div class="btn-group"><button class="btn" /><button class="btn dropdown-toggle" data-target="#menu" data-toggle="dropdown">&nbsp;</button><ul class="dropdown-menu" id="menu"><li><a href="#">Action</a></li></ul></div>',
document.body);d.add(a(".dropdown-toggle",this.n)[0],"disabled")},runTest:function(){e.emit(a(".dropdown-toggle",this.n)[0],"click",{bubbles:!0,cancelable:!0});b.f(d.contains(this.n,"open"))},tearDown:function(){c.destroy(this.n)}},"should remove open class if body clicked":{setUp:function(){this.n=c.place('<div class="btn-group"><button class="btn" /><button class="btn dropdown-toggle" data-target="#menu" data-toggle="dropdown">&nbsp;</button><ul class="dropdown-menu" id="menu"><li><a href="#">Action</a></li></ul></div>',
document.body);e.emit(a(".dropdown-toggle",this.n)[0],"click",{bubbles:!0,cancelable:!0})},runTest:function(){b.t(d.contains(this.n,"open"));e.emit(a(document.body)[0],"click",{bubbles:!0,cancelable:!0});b.f(d.contains(this.n,"open"))},tearDown:function(){c.destroy(this.n)}}})});